{
  "openapi": "3.0.3",
  "info": {
    "title": "School Management API",
    "description": "Comprehensive API documentation for School Management System including user authentication, school management, class management, and various educational modules",
    "version": "1.0.0",
    "contact": {
      "name": "API Support",
      "email": "support@schoolmanagement.com"
    }
  },
  "servers": [
    {
      "url": "https://wnm884z0-2003.inc1.devtunnels.ms/"
    }
  ],
  "tags": [
    {
      "name": "Authentication",
      "description": "User authentication and login operations"
    },
    {
      "name": "User Management",
      "description": "User registration and management operations"
    },
    {
      "name": "School Management",
      "description": "School registration and management operations"
    },
    {
      "name": "Class Management",
      "description": "Class creation and management operations"
    },
    {
      "name": "Division Management",
      "description": "Division creation and management operations"
    },
    {
      "name": "File Upload",
      "description": "File upload operations for various content types"
    },
    {
      "name": "Reports",
      "description": "Report generation and analytics"
    },
    {
      "name": "Masters",
      "description": "Master data management operations"
    }
  ],
  "components": {
    "securitySchemes": {
      "apikey": {
        "type": "apiKey",
        "in": "header",
        "name": "apikey",
        "description": "Public API key"
      },
      "token": {
        "type": "apiKey",
        "in": "header",
        "name": "token",
        "description": "User auth token; optional for /web/* endpoints"
      }
    },
    "schemas": {},
    "parameters": {},
    "responses": {}
  },
  "security": [
    {
      "apikey": [],
      "token": []
    }
  ],
  "paths": {
    "/user/login": {
      "post": {
        "summary": "User Login",
        "description": "Authenticate user with username/email and password",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "description": "Username or email address"
                  },
                  "password": {
                    "type": "string",
                    "description": "User password"
                  }
                },
                "required": [
                  "username",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Logged in successfully..."
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "token": {
                            "type": "string"
                          },
                          "UserData": {
                            "type": "array"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "Incorrect username or password..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "username or password parameter missing..."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/appUser/loginTeacher": {
      "post": {
        "summary": "Teacher Login",
        "description": "Authenticate teacher with mobile number and password",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "MOBILE_NUMBER": {
                    "type": "string",
                    "description": "Teacher mobile number"
                  },
                  "PASSWORD": {
                    "type": "string",
                    "description": "Teacher password"
                  }
                },
                "required": [
                  "MOBILE_NUMBER",
                  "PASSWORD"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Logged in successfully..."
                    },
                    "data": {
                      "type": "array"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to authenticate..."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/appUser/verifyLoginOTP": {
      "post": {
        "summary": "Verify Login OTP",
        "description": "Verify OTP sent to user's mobile number for login",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "MOBILE_NUMBER": {
                    "type": "string",
                    "description": "User mobile number"
                  },
                  "OTP": {
                    "type": "string",
                    "description": "OTP received on mobile"
                  }
                },
                "required": [
                  "MOBILE_NUMBER",
                  "OTP"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OTP verified successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "OTP verified successfully..."
                    },
                    "data": {
                      "type": "array"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid OTP or error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid OTP..."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/appUser/sendLoginOTP": {
      "post": {
        "summary": "Send Login OTP",
        "description": "Send OTP to user's mobile number for login verification",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "MOBILE_NUMBER": {
                    "type": "string",
                    "description": "User mobile number"
                  }
                },
                "required": [
                  "MOBILE_NUMBER"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OTP sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "OTP sent successfully..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error sending OTP",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to send OTP..."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/appUser/register": {
      "post": {
        "summary": "Register App User",
        "description": "Register a new app user (student/teacher) with personal and school information",
        "tags": [
          "User Management"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "NAME": {
                    "type": "string",
                    "description": "Full name of the user"
                  },
                  "COUNTRY_ID": {
                    "type": "integer",
                    "description": "Country ID"
                  },
                  "STATE_ID": {
                    "type": "integer",
                    "description": "State ID"
                  },
                  "CITY_ID": {
                    "type": "integer",
                    "description": "City ID"
                  },
                  "DISTRICT_ID": {
                    "type": "integer",
                    "description": "District ID"
                  },
                  "ADDRESS": {
                    "type": "string",
                    "description": "User address"
                  },
                  "DOB": {
                    "type": "string",
                    "format": "date",
                    "description": "Date of birth"
                  },
                  "GENDER": {
                    "type": "string",
                    "description": "Gender (M/F)"
                  },
                  "IDENTITY_NUMBER": {
                    "type": "string",
                    "description": "Identity number (Aadhaar, etc.)"
                  },
                  "MOBILE_NUMBER": {
                    "type": "string",
                    "description": "Mobile number"
                  },
                  "EMAIL_ID": {
                    "type": "string",
                    "format": "email",
                    "description": "Email address"
                  },
                  "PASSWORD": {
                    "type": "string",
                    "description": "User password"
                  },
                  "ROLE": {
                    "type": "string",
                    "description": "User role (Student/Teacher)"
                  },
                  "SCHOOL_ID": {
                    "type": "integer",
                    "description": "School ID"
                  },
                  "PROFILE_PHOTO": {
                    "type": "string",
                    "description": "Profile photo URL"
                  },
                  "PINCODE": {
                    "type": "string",
                    "description": "PIN code"
                  },
                  "CLOUD_ID": {
                    "type": "string",
                    "description": "Cloud ID"
                  },
                  "DEVICE_NAME": {
                    "type": "string",
                    "description": "Device name"
                  },
                  "ANDROID_VERSION": {
                    "type": "string",
                    "description": "Android version"
                  },
                  "APP_VERSION": {
                    "type": "string",
                    "description": "App version"
                  },
                  "AGE": {
                    "type": "integer",
                    "description": "User age"
                  },
                  "CLIENT_ID": {
                    "type": "integer",
                    "description": "Client ID"
                  }
                },
                "required": [
                  "NAME",
                  "MOBILE_NUMBER",
                  "EMAIL_ID",
                  "PASSWORD",
                  "ROLE",
                  "SCHOOL_ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "User registered successfully..."
                    },
                    "data": {
                      "type": "array"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Registration failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to register user..."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 422
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/school/sendRegistrationOTP": {
      "post": {
        "summary": "Send School Registration OTP",
        "description": "Send OTP to school's email for registration verification",
        "tags": [
          "School Management"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "EMAIL_ID": {
                    "type": "string",
                    "format": "email",
                    "description": "School email address"
                  }
                },
                "required": [
                  "EMAIL_ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OTP sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "OTP sent successfully..."
                    }
                  }
                }
              }
            }
          },
          "300": {
            "description": "Email already exists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 300
                    },
                    "message": {
                      "type": "string",
                      "example": "Email already exist..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error sending OTP",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to send OTP..."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/school/verifyRegistrationOTP": {
      "post": {
        "summary": "Verify School Registration OTP",
        "description": "Verify OTP sent to school's email for registration",
        "tags": [
          "School Management"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "EMAIL_ID": {
                    "type": "string",
                    "format": "email",
                    "description": "School email address"
                  },
                  "OTP": {
                    "type": "string",
                    "description": "OTP received on email"
                  }
                },
                "required": [
                  "EMAIL_ID",
                  "OTP"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OTP verified successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "OTP verified successfully..."
                    }
                  }
                }
              }
            }
          },
          "300": {
            "description": "Invalid OTP",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 300
                    },
                    "message": {
                      "type": "string",
                      "example": "Incorrect OTP..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error verifying OTP",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to verify OTP..."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/createClass/get": {
      "post": {
        "summary": "Get Classes",
        "description": "Retrieve list of classes with pagination and filtering options",
        "tags": [
          "Class Management"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "type": "integer",
                    "description": "Page index for pagination"
                  },
                  "pageSize": {
                    "type": "integer",
                    "description": "Number of records per page"
                  },
                  "sortKey": {
                    "type": "string",
                    "description": "Field to sort by",
                    "default": "ID"
                  },
                  "sortValue": {
                    "type": "string",
                    "enum": [
                      "ASC",
                      "DESC"
                    ],
                    "description": "Sort order",
                    "default": "DESC"
                  },
                  "filter": {
                    "type": "string",
                    "description": "Filter criteria"
                  },
                  "SCHOOL_ID": {
                    "type": "integer",
                    "description": "School ID to filter classes"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Classes retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "count": {
                      "type": "integer",
                      "description": "Total number of records"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "ID": {
                            "type": "integer"
                          },
                          "SCHOOL_ID": {
                            "type": "integer"
                          },
                          "NAME": {
                            "type": "string"
                          },
                          "SEQ_NO": {
                            "type": "integer"
                          },
                          "STATUS": {
                            "type": "string"
                          },
                          "TOTAL_FEES": {
                            "type": "number"
                          },
                          "MEDIUM_ID": {
                            "type": "integer"
                          },
                          "QUESTION_CLASS_ID": {
                            "type": "integer"
                          },
                          "IS_FEE_MAPPED": {
                            "type": "string"
                          },
                          "CLIENT_ID": {
                            "type": "integer"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Error retrieving classes",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "example": 400
                      },
                      "message": {
                        "type": "string",
                        "example": "Failed to get class information..."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/createDivision/get": {
      "post": {
        "summary": "Get Divisions",
        "description": "Retrieve list of divisions with pagination and filtering options",
        "tags": [
          "Division Management"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "type": "integer",
                    "description": "Page index for pagination"
                  },
                  "pageSize": {
                    "type": "integer",
                    "description": "Number of records per page"
                  },
                  "sortKey": {
                    "type": "string",
                    "description": "Field to sort by",
                    "default": "ID"
                  },
                  "sortValue": {
                    "type": "string",
                    "enum": [
                      "ASC",
                      "DESC"
                    ],
                    "description": "Sort order",
                    "default": "DESC"
                  },
                  "filter": {
                    "type": "string",
                    "description": "Filter criteria"
                  },
                  "SCHOOL_ID": {
                    "type": "integer",
                    "description": "School ID to filter divisions"
                  },
                  "CLASS_ID": {
                    "type": "integer",
                    "description": "Class ID to filter divisions"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Divisions retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "count": {
                      "type": "integer",
                      "description": "Total number of records"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "ID": {
                            "type": "integer"
                          },
                          "SCHOOL_ID": {
                            "type": "integer"
                          },
                          "CLASS_ID": {
                            "type": "integer"
                          },
                          "NAME": {
                            "type": "string"
                          },
                          "SEQ_NO": {
                            "type": "integer"
                          },
                          "STATUS": {
                            "type": "string"
                          },
                          "CLIENT_ID": {
                            "type": "integer"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Error retrieving divisions",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "example": 400
                      },
                      "message": {
                        "type": "string",
                        "example": "Failed to get division information..."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/web/state/get": {
      "post": {
        "security": [
          {
            "apikey": []
          }
        ],
        "summary": "Get States",
        "description": "Retrieve list of states with pagination and filtering options",
        "tags": [
          "Masters"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "type": "integer",
                    "description": "Page index for pagination"
                  },
                  "pageSize": {
                    "type": "integer",
                    "description": "Number of records per page"
                  },
                  "sortKey": {
                    "type": "string",
                    "description": "Field to sort by",
                    "default": "ID"
                  },
                  "sortValue": {
                    "type": "string",
                    "enum": [
                      "ASC",
                      "DESC"
                    ],
                    "description": "Sort order",
                    "default": "DESC"
                  },
                  "filter": {
                    "type": "string",
                    "description": "Filter criteria"
                  },
                  "COUNTRY_ID": {
                    "type": "integer",
                    "description": "Country ID to filter states"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "States retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "count": {
                      "type": "integer",
                      "description": "Total number of records"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "ID": {
                            "type": "integer"
                          },
                          "COUNTRY_ID": {
                            "type": "integer"
                          },
                          "NAME": {
                            "type": "string"
                          },
                          "STATUS": {
                            "type": "string"
                          },
                          "CLIENT_ID": {
                            "type": "integer"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Error retrieving states",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "example": 400
                      },
                      "message": {
                        "type": "string",
                        "example": "Failed to get state information..."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/web/city/get": {
      "post": {
        "security": [
          {
            "apikey": []
          }
        ],
        "summary": "Get Cities",
        "description": "Retrieve list of cities with pagination and filtering options",
        "tags": [
          "Masters"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "type": "integer",
                    "description": "Page index for pagination"
                  },
                  "pageSize": {
                    "type": "integer",
                    "description": "Number of records per page"
                  },
                  "sortKey": {
                    "type": "string",
                    "description": "Field to sort by",
                    "default": "ID"
                  },
                  "sortValue": {
                    "type": "string",
                    "enum": [
                      "ASC",
                      "DESC"
                    ],
                    "description": "Sort order",
                    "default": "DESC"
                  },
                  "filter": {
                    "type": "string",
                    "description": "Filter criteria"
                  },
                  "STATE_ID": {
                    "type": "integer",
                    "description": "State ID to filter cities"
                  },
                  "COUNTRY_ID": {
                    "type": "integer",
                    "description": "Country ID to filter cities"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Cities retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "count": {
                      "type": "integer",
                      "description": "Total number of records"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "ID": {
                            "type": "integer"
                          },
                          "STATE_ID": {
                            "type": "integer"
                          },
                          "COUNTRY_ID": {
                            "type": "integer"
                          },
                          "NAME": {
                            "type": "string"
                          },
                          "STATUS": {
                            "type": "string"
                          },
                          "CLIENT_ID": {
                            "type": "integer"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Error retrieving cities",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "example": 400
                      },
                      "message": {
                        "type": "string",
                        "example": "Failed to get city information..."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/web/district/get": {
      "post": {
        "security": [
          {
            "apikey": []
          }
        ],
        "summary": "Get Districts",
        "description": "Retrieve list of districts with pagination and filtering options",
        "tags": [
          "Masters"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "type": "integer",
                    "description": "Page index for pagination"
                  },
                  "pageSize": {
                    "type": "integer",
                    "description": "Number of records per page"
                  },
                  "sortKey": {
                    "type": "string",
                    "description": "Field to sort by",
                    "default": "ID"
                  },
                  "sortValue": {
                    "type": "string",
                    "enum": [
                      "ASC",
                      "DESC"
                    ],
                    "description": "Sort order",
                    "default": "DESC"
                  },
                  "filter": {
                    "type": "string",
                    "description": "Filter criteria"
                  },
                  "STATE_ID": {
                    "type": "integer",
                    "description": "State ID to filter districts"
                  },
                  "COUNTRY_ID": {
                    "type": "integer",
                    "description": "Country ID to filter districts"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Districts retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "count": {
                      "type": "integer",
                      "description": "Total number of records"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "ID": {
                            "type": "integer"
                          },
                          "STATE_ID": {
                            "type": "integer"
                          },
                          "COUNTRY_ID": {
                            "type": "integer"
                          },
                          "NAME": {
                            "type": "string"
                          },
                          "STATUS": {
                            "type": "string"
                          },
                          "CLIENT_ID": {
                            "type": "integer"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Error retrieving districts",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "example": 400
                      },
                      "message": {
                        "type": "string",
                        "example": "Failed to get district information..."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/web/country/get": {
      "post": {
        "security": [
          {
            "apikey": []
          }
        ],
        "summary": "Get Countries",
        "description": "Retrieve list of countries with pagination and filtering options",
        "tags": [
          "Masters"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "type": "integer",
                    "description": "Page index for pagination"
                  },
                  "pageSize": {
                    "type": "integer",
                    "description": "Number of records per page"
                  },
                  "sortKey": {
                    "type": "string",
                    "description": "Field to sort by",
                    "default": "ID"
                  },
                  "sortValue": {
                    "type": "string",
                    "enum": [
                      "ASC",
                      "DESC"
                    ],
                    "description": "Sort order",
                    "default": "DESC"
                  },
                  "filter": {
                    "type": "string",
                    "description": "Filter criteria"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Countries retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "count": {
                      "type": "integer",
                      "description": "Total number of records"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "ID": {
                            "type": "integer"
                          },
                          "NAME": {
                            "type": "string"
                          },
                          "STATUS": {
                            "type": "string"
                          },
                          "CLIENT_ID": {
                            "type": "integer"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Error retrieving countries",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "example": 400
                      },
                      "message": {
                        "type": "string",
                        "example": "Failed to get country information..."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/upload/advertisementImage": {
      "post": {
        "summary": "Upload Advertisement Image",
        "description": "Upload advertisement image file",
        "tags": [
          "File Upload"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Image": {
                    "type": "string",
                    "format": "binary",
                    "description": "Image file to upload"
                  }
                },
                "required": [
                  "Image"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Image uploaded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Upload failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "failed to upload..."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/web/removeFile": {
      "post": {
        "security": [
          {
            "apikey": []
          }
        ],
        "description": "Remove a file by URL",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "FILE_URL": {
                    "type": "string",
                    "description": "File URL to remove"
                  }
                },
                "required": [
                  "FILE_URL"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/upload/studentExcel": {
      "post": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/upload/answerImage": {
      "post": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/upload/questionImage": {
      "post": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/upload/optionImage": {
      "post": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/upload/taskAttachment": {
      "post": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/upload/appUserProfile": {
      "post": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/upload/ticketImage": {
      "post": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/upload/instituteLogo": {
      "post": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/upload/activityHeadImage": {
      "post": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/upload/activityGIF": {
      "post": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/upload/taskImage": {
      "post": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/upload/rewardImage": {
      "post": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/upload/animationVideo": {
      "post": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/upload/diamentionImage": {
      "post": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/upload/bannerImage": {
      "post": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/upload/activityCategoryImage": {
      "post": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/upload/appLogsFiles": {
      "post": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/upload/activityThumbnailGIF": {
      "post": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/upload/templateImage": {
      "post": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/contactUs/create": {
      "post": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/form/get": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "deviceid",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "nullable": true
                  },
                  "pageSize": {
                    "nullable": true
                  },
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/form/create": {
      "post": {
        "summary": "Create Form",
        "description": "Create a new form with name, description and client context",
        "parameters": [
          {
            "name": "deviceid",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "NAME": {
                    "type": "string",
                    "description": "Form name"
                  },
                  "DESCRIPTION": {
                    "type": "string",
                    "description": "Form description"
                  },
                  "CLIENT_ID": {
                    "type": "integer",
                    "description": "Client ID"
                  }
                },
                "required": [
                  "NAME",
                  "CLIENT_ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/form/update": {
      "put": {
        "summary": "Update Form",
        "description": "Update an existing form by ID",
        "parameters": [
          {
            "name": "deviceid",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ID": {
                    "type": "integer",
                    "description": "Form ID"
                  },
                  "NAME": {
                    "type": "string",
                    "description": "Form name"
                  },
                  "DESCRIPTION": {
                    "type": "string",
                    "description": "Form description"
                  },
                  "CLIENT_ID": {
                    "type": "integer",
                    "description": "Client ID"
                  }
                },
                "required": [
                  "ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/role/get": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "deviceid",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "nullable": true
                  },
                  "pageSize": {
                    "nullable": true
                  },
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/role/create": {
      "post": {
        "summary": "Create Role",
        "description": "Create a new user role",
        "parameters": [
          {
            "name": "deviceid",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "NAME": {
                    "type": "string",
                    "description": "Role name"
                  },
                  "DESCRIPTION": {
                    "type": "string",
                    "description": "Role description"
                  },
                  "CLIENT_ID": {
                    "type": "integer",
                    "description": "Client ID"
                  }
                },
                "required": [
                  "NAME",
                  "CLIENT_ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/role/update": {
      "put": {
        "summary": "Update Role",
        "description": "Update an existing role by ID",
        "parameters": [
          {
            "name": "deviceid",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ID": {
                    "type": "integer",
                    "description": "Role ID"
                  },
                  "NAME": {
                    "type": "string",
                    "description": "Role name"
                  },
                  "DESCRIPTION": {
                    "type": "string",
                    "description": "Role description"
                  },
                  "CLIENT_ID": {
                    "type": "integer",
                    "description": "Client ID"
                  }
                },
                "required": [
                  "ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/role/getChildRoles": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "deviceid",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "parentId": {
                    "nullable": true
                  },
                  "employeeId": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/roleDetails/get": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "deviceid",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "nullable": true
                  },
                  "pageSize": {
                    "nullable": true
                  },
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/roleDetails/addBulk": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "nullable": true
                  },
                  "ROLE_ID": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/roleDetails/getData": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ROLE_ID": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/roleDetails/checkAccess": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ROLE_ID": {
                    "nullable": true
                  },
                  "LINK": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/user/get": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "deviceid",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "nullable": true
                  },
                  "pageSize": {
                    "nullable": true
                  },
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/user/create": {
      "post": {
        "summary": "Create User",
        "description": "Create a new user with role mapping",
        "parameters": [
          {
            "name": "deviceid",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ROLE_DATA": {
                    "type": "array",
                    "description": "Role mapping array"
                  },
                  "NAME": {
                    "type": "string",
                    "description": "User name"
                  },
                  "EMAIL": {
                    "type": "string",
                    "description": "User email"
                  },
                  "MOBILE_NUMBER": {
                    "type": "string",
                    "description": "User mobile number"
                  },
                  "CLIENT_ID": {
                    "type": "integer",
                    "description": "Client ID"
                  }
                },
                "required": [
                  "ROLE_DATA",
                  "CLIENT_ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/user/update": {
      "put": {
        "summary": "Update User",
        "description": "Update user details and role mapping by ID",
        "parameters": [
          {
            "name": "deviceid",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ID": {
                    "type": "integer",
                    "description": "User ID"
                  },
                  "ROLE_DATA": {
                    "type": "array",
                    "description": "Role mapping array"
                  },
                  "NAME": {
                    "type": "string",
                    "description": "User name"
                  },
                  "EMAIL": {
                    "type": "string",
                    "description": "User email"
                  },
                  "MOBILE_NUMBER": {
                    "type": "string",
                    "description": "User mobile number"
                  },
                  "CLIENT_ID": {
                    "type": "integer",
                    "description": "Client ID"
                  }
                },
                "required": [
                  "ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/user/getForms": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ROLE_ID": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/user/changePassword": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "EMPLOYEE_ID": {
                    "nullable": true
                  },
                  "OLD_PASSWORD": {
                    "nullable": true
                  },
                  "NEW_PASSWORD": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/userRoleMapping/get": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "deviceid",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "nullable": true
                  },
                  "pageSize": {
                    "nullable": true
                  },
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/globalSettings/getVersion": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apikey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/globalSettings/updatedVersion": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "MIN_VERSION": {
                    "nullable": true
                  },
                  "CUR_VERSION": {
                    "nullable": true
                  },
                  "APK_LINK": {
                    "nullable": true
                  },
                  "DETOX_TIME": {
                    "nullable": true
                  },
                  "DETOX_DURATION": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/globalSettings/getDetoxInfo": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apikey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/banner/get": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "nullable": true
                  },
                  "pageSize": {
                    "nullable": true
                  },
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/banner/create": {
      "post": {
        "summary": "Create Banner",
        "description": "Create a new banner",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "TITLE": {
                    "type": "string",
                    "description": "Banner title"
                  },
                  "DESCRIPTION": {
                    "type": "string",
                    "description": "Banner description"
                  },
                  "SEQ_NO": {
                    "type": "integer",
                    "description": "Sequence number"
                  },
                  "STATUS": {
                    "type": "integer",
                    "enum": [
                      0,
                      1
                    ],
                    "description": "Active status (0/1)"
                  },
                  "URL": {
                    "type": "string",
                    "description": "Banner target URL"
                  },
                  "CLIENT_ID": {
                    "type": "integer",
                    "description": "Client ID"
                  }
                },
                "required": [
                  "TITLE",
                  "SEQ_NO",
                  "CLIENT_ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "422": {
            "description": "Validation error"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/banner/update": {
      "put": {
        "summary": "Update Banner",
        "description": "Update existing banner by ID",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ID": {
                    "type": "integer",
                    "description": "Banner ID"
                  },
                  "TITLE": {
                    "type": "string",
                    "description": "Banner title"
                  },
                  "DESCRIPTION": {
                    "type": "string",
                    "description": "Banner description"
                  },
                  "SEQ_NO": {
                    "type": "integer",
                    "description": "Sequence number"
                  },
                  "STATUS": {
                    "type": "integer",
                    "enum": [
                      0,
                      1
                    ],
                    "description": "Active status (0/1)"
                  },
                  "URL": {
                    "type": "string",
                    "description": "Banner target URL"
                  },
                  "CLIENT_ID": {
                    "type": "integer",
                    "description": "Client ID"
                  }
                },
                "required": [
                  "ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "422": {
            "description": "Validation error"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/state/get": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "nullable": true
                  },
                  "pageSize": {
                    "nullable": true
                  },
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/state/create": {
      "post": {
        "summary": "Create State",
        "description": "Create a new state",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "NAME": {
                    "type": "string",
                    "description": "State name"
                  },
                  "SEQ_NO": {
                    "type": "integer",
                    "description": "Sequence number"
                  },
                  "COUNTRY_ID": {
                    "type": "integer",
                    "description": "Country ID"
                  },
                  "STATUS": {
                    "type": "integer",
                    "enum": [
                      0,
                      1
                    ],
                    "description": "Active status (0/1)"
                  },
                  "IS_DISTRICT_AVALIBLE": {
                    "type": "integer",
                    "enum": [
                      0,
                      1
                    ],
                    "description": "Has districts (0/1)"
                  },
                  "CLIENT_ID": {
                    "type": "integer",
                    "description": "Client ID"
                  }
                },
                "required": [
                  "NAME",
                  "SEQ_NO",
                  "COUNTRY_ID",
                  "CLIENT_ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "422": {
            "description": "Validation error"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/state/update": {
      "put": {
        "summary": "Update State",
        "description": "Update existing state by ID",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ID": {
                    "type": "integer",
                    "description": "State ID"
                  },
                  "NAME": {
                    "type": "string",
                    "description": "State name"
                  },
                  "SEQ_NO": {
                    "type": "integer",
                    "description": "Sequence number"
                  },
                  "COUNTRY_ID": {
                    "type": "integer",
                    "description": "Country ID"
                  },
                  "STATUS": {
                    "type": "integer",
                    "enum": [
                      0,
                      1
                    ],
                    "description": "Active status (0/1)"
                  },
                  "IS_DISTRICT_AVALIBLE": {
                    "type": "integer",
                    "enum": [
                      0,
                      1
                    ],
                    "description": "Has districts (0/1)"
                  },
                  "CLIENT_ID": {
                    "type": "integer",
                    "description": "Client ID"
                  }
                },
                "required": [
                  "ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "422": {
            "description": "Validation error"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/city/get": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "nullable": true
                  },
                  "pageSize": {
                    "nullable": true
                  },
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/city/create": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/city/update": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ID": {
                    "nullable": true
                  }
                },
                "required": [
                  "ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/district/get": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "nullable": true
                  },
                  "pageSize": {
                    "nullable": true
                  },
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/district/create": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/district/update": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ID": {
                    "nullable": true
                  }
                },
                "required": [
                  "ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/country/get": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "nullable": true
                  },
                  "pageSize": {
                    "nullable": true
                  },
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/country/create": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/country/update": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ID": {
                    "nullable": true
                  }
                },
                "required": [
                  "ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/schoolRegistration/get": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "nullable": true
                  },
                  "pageSize": {
                    "nullable": true
                  },
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/schoolRegistration/create": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/schoolRegistration/update": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ID": {
                    "nullable": true
                  }
                },
                "required": [
                  "ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/socialTaskMapping/get": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "nullable": true
                  },
                  "pageSize": {
                    "nullable": true
                  },
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/socialTaskMapping/create": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/socialTaskMapping/update": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ID": {
                    "nullable": true
                  }
                },
                "required": [
                  "ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/advertisement/get": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "nullable": true
                  },
                  "pageSize": {
                    "nullable": true
                  },
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/advertisement/create": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/advertisement/update": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ID": {
                    "nullable": true
                  }
                },
                "required": [
                  "ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ageGroup/get": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "nullable": true
                  },
                  "pageSize": {
                    "nullable": true
                  },
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ageGroup/create": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ageGroup/update": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ID": {
                    "nullable": true
                  }
                },
                "required": [
                  "ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/subject/update": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ID": {
                    "nullable": true
                  }
                },
                "required": [
                  "ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/subject/map": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "TEACHER_ID": {
                    "nullable": true
                  },
                  "YEAR_ID": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/subject/add": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "YEAR_ID": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/questionType/get": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "nullable": true
                  },
                  "pageSize": {
                    "nullable": true
                  },
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/questionType/create": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/questionType/update": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ID": {
                    "nullable": true
                  }
                },
                "required": [
                  "ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/chapter/get": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "nullable": true
                  },
                  "pageSize": {
                    "nullable": true
                  },
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/chapter/create": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/chapter/update": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ID": {
                    "nullable": true
                  }
                },
                "required": [
                  "ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/question/get": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "nullable": true
                  },
                  "pageSize": {
                    "nullable": true
                  },
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/question/create": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/question/update": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ID": {
                    "nullable": true
                  }
                },
                "required": [
                  "ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/question/addBulk": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "QUESTION_DATA": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/question/updateBulk": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "OPTIONS": {
                    "nullable": true
                  },
                  "ID": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/question/getChapterList": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "nullable": true
                  },
                  "pageSize": {
                    "nullable": true
                  },
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/questionOptionsMapping/get": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "nullable": true
                  },
                  "pageSize": {
                    "nullable": true
                  },
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/questionOptionsMapping/create": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/questionOptionsMapping/update": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ID": {
                    "nullable": true
                  }
                },
                "required": [
                  "ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/board/get": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "nullable": true
                  },
                  "pageSize": {
                    "nullable": true
                  },
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/board/create": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/board/update": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ID": {
                    "nullable": true
                  }
                },
                "required": [
                  "ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/medium/get": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "nullable": true
                  },
                  "pageSize": {
                    "nullable": true
                  },
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/medium/create": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/medium/update": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ID": {
                    "nullable": true
                  }
                },
                "required": [
                  "ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/questionPaperClass/get": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "nullable": true
                  },
                  "pageSize": {
                    "nullable": true
                  },
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/questionPaperClass/create": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/questionPaperClass/update": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ID": {
                    "nullable": true
                  }
                },
                "required": [
                  "ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/classFeeMapping/get": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "nullable": true
                  },
                  "pageSize": {
                    "nullable": true
                  },
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/classFeeMapping/create": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/classFeeMapping/update": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ID": {
                    "nullable": true
                  }
                },
                "required": [
                  "ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/classFeeMapping/add": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "feeDetails": {
                    "nullable": true
                  },
                  "CLASS_ID": {
                    "nullable": true
                  },
                  "YEAR_ID": {
                    "nullable": true
                  },
                  "TOTAL_FEES": {
                    "nullable": true
                  },
                  "DIVISION_ID": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/createDivision/get": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "nullable": true
                  },
                  "pageSize": {
                    "nullable": true
                  },
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/createDivision/create": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/createDivision/update": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ID": {
                    "nullable": true
                  }
                },
                "required": [
                  "ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/feeHead/get": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "nullable": true
                  },
                  "pageSize": {
                    "nullable": true
                  },
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/feeHead/create": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/feeHead/update": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ID": {
                    "nullable": true
                  }
                },
                "required": [
                  "ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/appUser/get": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "nullable": true
                  },
                  "pageSize": {
                    "nullable": true
                  },
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/appUser/create": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/appUser/update": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ID": {
                    "nullable": true
                  }
                },
                "required": [
                  "ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/appUser/addTeacher": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "CLASS_ID": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/appUser/updateTeacher": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "CLASS_ID": {
                    "nullable": true
                  },
                  "ID": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/appUser/approveRejectTeacher": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ID": {
                    "nullable": true
                  },
                  "TEMP_SUBJECT_ID": {
                    "nullable": true
                  },
                  "TEMP_CLASS_ID": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/appUser/getTeacherCount": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/appUser/importStudents": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "EXCEL_FILE_NAME": {
                    "nullable": true
                  },
                  "CLASS_ID": {
                    "nullable": true
                  },
                  "YEAR_ID": {
                    "nullable": true
                  },
                  "SCHOOL_ID": {
                    "nullable": true
                  },
                  "DIVISION_ID": {
                    "nullable": true
                  },
                  "MEDIUM_ID": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/appUser/promoteStudents": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "STUDENT_DATA": {
                    "nullable": true
                  },
                  "CLASS_ID": {
                    "nullable": true
                  },
                  "YEAR_ID": {
                    "nullable": true
                  },
                  "DIVISION_ID": {
                    "nullable": true
                  },
                  "MEDIUM_ID": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/appUser/createStudents": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "studentData": {
                    "nullable": true
                  },
                  "CLASS_ID": {
                    "nullable": true
                  },
                  "YEAR_ID": {
                    "nullable": true
                  },
                  "SCHOOL_ID": {
                    "nullable": true
                  },
                  "DIVISION_ID": {
                    "nullable": true
                  },
                  "MEDIUM_ID": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/appUser/mapClassStudent": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "STUDENT_ID": {
                    "nullable": true
                  },
                  "CLASS_ID": {
                    "nullable": true
                  },
                  "YEAR_ID": {
                    "nullable": true
                  },
                  "DIVISION_ID": {
                    "nullable": true
                  },
                  "MEDIUM_ID": {
                    "nullable": true
                  },
                  "ROLL_NUMBER": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/appUser/getStudentCount": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/appUser/approveRejectStudent": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ID": {
                    "nullable": true
                  },
                  "APPROVAL_STATUS": {
                    "nullable": true
                  },
                  "NAME": {
                    "nullable": true
                  },
                  "MOBILE_NUMBER": {
                    "nullable": true
                  },
                  "EMAIL_ID": {
                    "nullable": true
                  },
                  "TEMP_CLASS_ID": {
                    "nullable": true
                  },
                  "YEAR_ID": {
                    "nullable": true
                  },
                  "TEMP_DIVISION_ID": {
                    "nullable": true
                  },
                  "TEMP_ROLL_NO": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/appUser/getAppUserSummary": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "FROM_DATE": {
                    "nullable": true
                  },
                  "TO_DATE": {
                    "nullable": true
                  },
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/appUser/sendRegistrationMessage": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "MOBILE_NUMBER": {
                    "nullable": true
                  },
                  "NAME": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/questionSubject/get": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "nullable": true
                  },
                  "pageSize": {
                    "nullable": true
                  },
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/questionSubject/create": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/questionSubject/update": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ID": {
                    "nullable": true
                  }
                },
                "required": [
                  "ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/subjectTeacherMapping/get": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "nullable": true
                  },
                  "pageSize": {
                    "nullable": true
                  },
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/subjectTeacherMapping/create": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/subjectTeacherMapping/update": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ID": {
                    "nullable": true
                  }
                },
                "required": [
                  "ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/subjectTeacherMapping/mapBulkSubject": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "SUBJECT_DETAILS": {
                    "nullable": true
                  },
                  "CLASS_ID": {
                    "nullable": true
                  },
                  "YEAR_ID": {
                    "nullable": true
                  },
                  "DIVISION_ID": {
                    "nullable": true
                  },
                  "CLASS_TEACHER_ID": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/attendance/get": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "nullable": true
                  },
                  "pageSize": {
                    "nullable": true
                  },
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/attendance/create": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/attendance/update": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ID": {
                    "nullable": true
                  }
                },
                "required": [
                  "ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/attendance/markAttendance": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "SUBJECT_DETAILS": {
                    "nullable": true
                  },
                  "CLASS_ID": {
                    "nullable": true
                  },
                  "SUBJECT_ID": {
                    "nullable": true
                  },
                  "TEACHER_ID": {
                    "nullable": true
                  },
                  "LECTURE_TIME": {
                    "nullable": true
                  },
                  "DATE": {
                    "nullable": true
                  },
                  "IS_CLASS_ATTENDENCE": {
                    "nullable": true
                  },
                  "DIVISION_ID": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/attendanceDetails/get": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "nullable": true
                  },
                  "pageSize": {
                    "nullable": true
                  },
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/attendanceDetails/create": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/attendanceDetails/update": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ID": {
                    "nullable": true
                  }
                },
                "required": [
                  "ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/attendanceDetails/getCount": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/attendanceDetails/getSubjectCount": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/boardMedium/get": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "nullable": true
                  },
                  "pageSize": {
                    "nullable": true
                  },
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/boardMedium/create": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/boardMedium/update": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ID": {
                    "nullable": true
                  }
                },
                "required": [
                  "ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/studentFee/get": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "nullable": true
                  },
                  "pageSize": {
                    "nullable": true
                  },
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/studentFee/create": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/studentFee/update": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ID": {
                    "nullable": true
                  }
                },
                "required": [
                  "ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/studentFee/addBulk": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "feeDetails": {
                    "nullable": true
                  },
                  "CLASS_ID": {
                    "nullable": true
                  },
                  "YEAR_ID": {
                    "nullable": true
                  },
                  "STUDENT_ID": {
                    "nullable": true
                  },
                  "DIVISION_ID": {
                    "nullable": true
                  },
                  "ID": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/studentFee/sendFeeDuesNotification": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "STUDENT_IDs": {
                    "nullable": true
                  },
                  "YEAR_ID": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/studentFee/delete": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ID": {
                    "nullable": true
                  }
                },
                "required": [
                  "ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/memberTodo/get": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "nullable": true
                  },
                  "pageSize": {
                    "nullable": true
                  },
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/memberTodo/create": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/memberTodo/update": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ID": {
                    "nullable": true
                  }
                },
                "required": [
                  "ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/memberTodo/add": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "WEEK_PLAN_DATES": {
                    "nullable": true
                  },
                  "REMIND_TIME": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/memberTodo/updateSeries": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "WEEK_PLAN_DATES": {
                    "nullable": true
                  },
                  "REMIND_TIME": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/memberTodo/remove": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "IDS": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ticketGroup/get": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "nullable": true
                  },
                  "pageSize": {
                    "nullable": true
                  },
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ticketGroup/create": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ticketGroup/update": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ID": {
                    "nullable": true
                  }
                },
                "required": [
                  "ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ticketGroup/getParent": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "TICKET_GROUP_ID": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/notification/get": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "nullable": true
                  },
                  "pageSize": {
                    "nullable": true
                  },
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/notification/create": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/notification/update": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ID": {
                    "nullable": true
                  }
                },
                "required": [
                  "ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/activity/get": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "nullable": true
                  },
                  "pageSize": {
                    "nullable": true
                  },
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/activity/create": {
      "post": {
        "description": "Create a new activity",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "required": true,
            "description": "Support key identifying the client/tenant",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ACTIVITY_NAME": {
                    "type": "string"
                  },
                  "ACTIVITY_GIF": {
                    "type": "string"
                  },
                  "SEQ_NO": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "DESCRIPTION": {
                    "type": "string",
                    "nullable": true
                  },
                  "CATEGORY": {
                    "type": "string",
                    "nullable": true
                  },
                  "CLIENT_ID": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "ACTIVITY_CATEGORY_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "ACTIVITY_SUB_CATEGORY_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "ACTIVITY_THUMBNAIL_GIF": {
                    "type": "string",
                    "nullable": true
                  },
                  "STATUS": {
                    "type": "boolean",
                    "description": "true for active, false for inactive"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Activity created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "ActivityMaster information saved successfully..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to save activity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to save activityMaster information..."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/activity/update": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ID": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "ACTIVITY_NAME": {
                    "type": "string",
                    "nullable": true
                  },
                  "ACTIVITY_GIF": {
                    "type": "string",
                    "nullable": true
                  },
                  "SEQ_NO": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "DESCRIPTION": {
                    "type": "string",
                    "nullable": true
                  },
                  "CATEGORY": {
                    "type": "string",
                    "nullable": true
                  },
                  "CLIENT_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "ACTIVITY_CATEGORY_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "ACTIVITY_SUB_CATEGORY_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "ACTIVITY_THUMBNAIL_GIF": {
                    "type": "string",
                    "nullable": true
                  },
                  "STATUS": {
                    "type": "boolean",
                    "nullable": true
                  }
                },
                "required": [
                  "ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Activity updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "ActivityMaster information updated successfully..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to update activity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to update activityMaster information."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 422
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/activity/add": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "HEAD_ID": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "ACTIVITY_TYPE": {
                    "type": "string"
                  },
                  "ACTIVITY_VALUE": {
                    "type": "string"
                  },
                  "ACTIVITY_NAME": {
                    "type": "string",
                    "nullable": true
                  },
                  "ACTIVITY_GIF": {
                    "type": "string",
                    "nullable": true
                  },
                  "SEQ_NO": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "DESCRIPTION": {
                    "type": "string",
                    "nullable": true
                  },
                  "CATEGORY": {
                    "type": "string",
                    "nullable": true
                  },
                  "CLIENT_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "ACTIVITY_CATEGORY_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "ACTIVITY_SUB_CATEGORY_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "ACTIVITY_THUMBNAIL_GIF": {
                    "type": "string",
                    "nullable": true
                  },
                  "STATUS": {
                    "type": "boolean",
                    "nullable": true
                  }
                },
                "required": [
                  "HEAD_ID",
                  "ACTIVITY_TYPE",
                  "ACTIVITY_VALUE"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Activity and mapping created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "ActivityMaster information saved successfully..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to save activity or mapping",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to save activityMapping information..."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 422
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/activity/modify": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ACTIVITY_ID": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "ID": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Activity mapping ID"
                  },
                  "ACTIVITY_TYPE": {
                    "type": "string"
                  },
                  "ACTIVITY_VALUE": {
                    "type": "string"
                  },
                  "HEAD_ID": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "ACTIVITY_NAME": {
                    "type": "string",
                    "nullable": true
                  },
                  "ACTIVITY_GIF": {
                    "type": "string",
                    "nullable": true
                  },
                  "SEQ_NO": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "DESCRIPTION": {
                    "type": "string",
                    "nullable": true
                  },
                  "CATEGORY": {
                    "type": "string",
                    "nullable": true
                  },
                  "CLIENT_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "ACTIVITY_CATEGORY_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "ACTIVITY_SUB_CATEGORY_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "ACTIVITY_THUMBNAIL_GIF": {
                    "type": "string",
                    "nullable": true
                  },
                  "STATUS": {
                    "type": "boolean",
                    "nullable": true
                  }
                },
                "required": [
                  "ACTIVITY_ID",
                  "ID",
                  "ACTIVITY_TYPE",
                  "ACTIVITY_VALUE",
                  "HEAD_ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Activity and mapping updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "ActivityMaster information updated successfully..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to update activity or mapping",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to update activityMaster information."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 422
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/activityHead/get": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "nullable": true
                  },
                  "pageSize": {
                    "nullable": true
                  },
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/activityHead/create": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "HEAD_NAME": {
                    "type": "string",
                    "nullable": true
                  },
                  "HEAD_IMAGE": {
                    "type": "string",
                    "nullable": true
                  },
                  "SEQ_NO": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "STATUS": {
                    "type": "boolean",
                    "description": "true for active, false for inactive",
                    "nullable": true
                  },
                  "USER_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "CLIENT_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "REST_TIME": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Activity head created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "ActivityHeadMaster information saved successfully..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to save activity head",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to save activityHeadMaster information..."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 422
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/activityHead/update": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ID": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "HEAD_NAME": {
                    "type": "string",
                    "nullable": true
                  },
                  "HEAD_IMAGE": {
                    "type": "string",
                    "nullable": true
                  },
                  "SEQ_NO": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "STATUS": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "USER_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "CLIENT_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "REST_TIME": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  }
                },
                "required": [
                  "ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Activity head updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "ActivityHeadMaster information updated successfully..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to update activity head",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to update activityHeadMaster information."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 422
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/activityHead/addUserHead": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "HEAD_NAME": {
                    "type": "string",
                    "nullable": true
                  },
                  "HEAD_IMAGE": {
                    "type": "string",
                    "nullable": true
                  },
                  "SEQ_NO": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "STATUS": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "USER_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "CLIENT_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "REST_TIME": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "activityId": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "ACTIVITY_ID": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "ACTIVITY_TYPE": {
                          "type": "string"
                        },
                        "ACTIVITY_VALUE": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "ACTIVITY_ID",
                        "ACTIVITY_TYPE",
                        "ACTIVITY_VALUE"
                      ]
                    }
                  }
                },
                "required": [
                  "activityId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Activity head and mappings created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "activityUser information saved successfully..."
                    },
                    "MASTER_ID": {
                      "type": "integer",
                      "example": 123
                    }
                  }
                }
              }
            }
          },
          "300": {
            "description": "No activity found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 300
                    },
                    "message": {
                      "type": "string",
                      "example": "no activity found..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to save head or mapping",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to save activityMapping information..."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 422
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/activityHead/updateUserHead": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ID": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "HEAD_NAME": {
                    "type": "string",
                    "nullable": true
                  },
                  "HEAD_IMAGE": {
                    "type": "string",
                    "nullable": true
                  },
                  "SEQ_NO": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "STATUS": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "USER_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "CLIENT_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "REST_TIME": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "activityId": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "ID": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "HEAD_ID": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "ACTIVITY_ID": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "ACTIVITY_TYPE": {
                          "type": "string"
                        },
                        "ACTIVITY_VALUE": {
                          "type": "string"
                        },
                        "IS_DELETE": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "ID",
                        "HEAD_ID",
                        "ACTIVITY_ID",
                        "ACTIVITY_TYPE",
                        "ACTIVITY_VALUE",
                        "IS_DELETE"
                      ]
                    }
                  }
                },
                "required": [
                  "ID",
                  "activityId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Activity head and mappings updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "activityUser information updated successfully..."
                    }
                  }
                }
              }
            }
          },
          "300": {
            "description": "No activity found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 300
                    },
                    "message": {
                      "type": "string",
                      "example": "no activity found..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to update head or mapping",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "activityId array is empty..."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 422
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/activityHead/getCustomWorkOutReports": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "nullable": true
                  },
                  "pageSize": {
                    "nullable": true
                  },
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/activityHead/getCustomWorkOutSummary": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "nullable": true
                  },
                  "pageSize": {
                    "nullable": true
                  },
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/activityUserMapping/get": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "nullable": true
                  },
                  "pageSize": {
                    "nullable": true
                  },
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/activityUserMapping/create": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "MASTER_ID": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "ACTIVITY_MAPPING_ID": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "ACTIVITY_TIMING": {
                    "type": "string",
                    "nullable": true
                  },
                  "ACTIVITY_SETS": {
                    "type": "string",
                    "nullable": true
                  },
                  "ACTIVITY_STATUS": {
                    "type": "string",
                    "nullable": true
                  },
                  "COMPLETED_DATETIME": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "CLIENT_ID": {
                    "type": "integer",
                    "format": "int32"
                  }
                },
                "required": [
                  "MASTER_ID",
                  "ACTIVITY_MAPPING_ID",
                  "CLIENT_ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ActivityUserMapping information saved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "ActivityUserMapping information saved successfully..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to save mapping",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to save activityUserMapping information..."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 422
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/activityUserMapping/update": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ID": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "MASTER_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "ACTIVITY_MAPPING_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "ACTIVITY_TIMING": {
                    "type": "string",
                    "nullable": true
                  },
                  "ACTIVITY_SETS": {
                    "type": "string",
                    "nullable": true
                  },
                  "ACTIVITY_STATUS": {
                    "type": "string",
                    "nullable": true
                  },
                  "COMPLETED_DATETIME": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "CLIENT_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  }
                },
                "required": [
                  "ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ActivityUserMapping information updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "ActivityUserMapping information updated successfully..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to update mapping",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to update activityUserMapping information."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 422
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/activityUser/get": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "nullable": true
                  },
                  "pageSize": {
                    "nullable": true
                  },
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/activityUser/create": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "USER_ID": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "COMPLETED_PERCENTAGE": {
                    "type": "number",
                    "nullable": true
                  },
                  "CURRENT_ACTIVITY_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "END_DATETIME": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "START_DATETIME": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "ACTIVITY_HEAD": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "INTERMEDIATE_PERCENTAGE": {
                    "type": "number",
                    "nullable": true
                  },
                  "ELITE_PERCENTAGE": {
                    "type": "number",
                    "nullable": true
                  },
                  "CLIENT_ID": {
                    "type": "integer",
                    "format": "int32"
                  }
                },
                "required": [
                  "USER_ID",
                  "ACTIVITY_HEAD",
                  "CLIENT_ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ActivityUserMaster information saved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "ActivityUserMaster information saved successfully..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to save",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to save activityUserMaster information..."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 422
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/activityUser/update": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ID": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "USER_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "COMPLETED_PERCENTAGE": {
                    "type": "number",
                    "nullable": true
                  },
                  "CURRENT_ACTIVITY_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "END_DATETIME": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "START_DATETIME": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "ACTIVITY_HEAD": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "INTERMEDIATE_PERCENTAGE": {
                    "type": "number",
                    "nullable": true
                  },
                  "ELITE_PERCENTAGE": {
                    "type": "number",
                    "nullable": true
                  },
                  "CLIENT_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  }
                },
                "required": [
                  "ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ActivityUserMaster information updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "ActivityUserMaster information updated successfully..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to update",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to update activityUserMaster information."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 422
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/activityUser/add": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "USER_ID": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "COMPLETED_PERCENTAGE": {
                    "type": "number",
                    "nullable": true
                  },
                  "CURRENT_ACTIVITY_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "END_DATETIME": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "START_DATETIME": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "ACTIVITY_HEAD": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "INTERMEDIATE_PERCENTAGE": {
                    "type": "number",
                    "nullable": true
                  },
                  "ELITE_PERCENTAGE": {
                    "type": "number",
                    "nullable": true
                  },
                  "CLIENT_ID": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "activityId": {
                    "type": "string",
                    "description": "Comma-separated ACTIVITY_MAPPING_ID list"
                  }
                },
                "required": [
                  "USER_ID",
                  "ACTIVITY_HEAD",
                  "CLIENT_ID",
                  "activityId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "activityUser saved and mappings created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "activityUser information saved successfully..."
                    },
                    "MASTER_ID": {
                      "type": "integer",
                      "example": 123
                    }
                  }
                }
              }
            }
          },
          "300": {
            "description": "No activity found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 300
                    },
                    "message": {
                      "type": "string",
                      "example": "no activity found..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to save master or mapping",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to save activityUser information..."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 422
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/activityUser/getPreArrengeActivity": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "nullable": true
                  },
                  "pageSize": {
                    "nullable": true
                  },
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/activityHeadMapping/get": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "nullable": true
                  },
                  "pageSize": {
                    "nullable": true
                  },
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/activityHeadMapping/create": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "HEAD_ID": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "ACTIVITY_ID": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "ACTIVITY_TYPE": {
                    "type": "string"
                  },
                  "ACTIVITY_VALUE": {
                    "type": "string"
                  },
                  "CLIENT_ID": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "CATEGORY": {
                    "type": "string",
                    "nullable": true
                  },
                  "STATUS": {
                    "type": "boolean",
                    "nullable": true
                  }
                },
                "required": [
                  "HEAD_ID",
                  "ACTIVITY_ID",
                  "ACTIVITY_TYPE",
                  "ACTIVITY_VALUE",
                  "CLIENT_ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ActivityHeadMapping information saved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "ActivityHeadMapping information saved successfully..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to save mapping",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to save activityHeadMapping information..."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 422
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/activityHeadMapping/update": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ID": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "HEAD_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "ACTIVITY_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "ACTIVITY_TYPE": {
                    "type": "string",
                    "nullable": true
                  },
                  "ACTIVITY_VALUE": {
                    "type": "string",
                    "nullable": true
                  },
                  "CLIENT_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "CATEGORY": {
                    "type": "string",
                    "nullable": true
                  },
                  "STATUS": {
                    "type": "boolean",
                    "nullable": true
                  }
                },
                "required": [
                  "ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ActivityHeadMapping information updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "ActivityHeadMapping information updated successfully..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to update mapping",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to update activityHeadMapping information."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 422
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/ageCategory/get": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "nullable": true
                  },
                  "pageSize": {
                    "nullable": true
                  },
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ageCategory/create": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "LABLE": {
                    "type": "string"
                  },
                  "START_AGE": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "END_AGE": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "STATUS": {
                    "type": "boolean",
                    "description": "true for active, false for inactive",
                    "nullable": true
                  },
                  "SEQ_NO": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "CLIENT_ID": {
                    "type": "integer",
                    "format": "int32"
                  }
                },
                "required": [
                  "LABLE",
                  "START_AGE",
                  "END_AGE",
                  "CLIENT_ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "AgeCategoryMaster information saved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "AgeCategoryMaster information saved successfully..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to save age category",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to save ageCategoryMaster information..."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 422
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/ageCategory/update": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ID": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "LABLE": {
                    "type": "string",
                    "nullable": true
                  },
                  "START_AGE": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "END_AGE": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "STATUS": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "SEQ_NO": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "CLIENT_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  }
                },
                "required": [
                  "ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "AgeCategoryMaster information updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "AgeCategoryMaster information updated successfully..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to update age category",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to update ageCategoryMaster information."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 422
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/diamentions/get": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "nullable": true
                  },
                  "pageSize": {
                    "nullable": true
                  },
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/diamentions/create": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "NAME": {
                    "type": "string"
                  },
                  "STATUS": {
                    "type": "boolean",
                    "description": "true for active, false for inactive",
                    "nullable": true
                  },
                  "SEQ_NO": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "IMAGE_URL": {
                    "type": "string",
                    "nullable": true
                  },
                  "DESCRIPTION": {
                    "type": "string",
                    "nullable": true
                  },
                  "CLIENT_ID": {
                    "type": "integer",
                    "format": "int32"
                  }
                },
                "required": [
                  "NAME",
                  "CLIENT_ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "DiamentionsMaster information saved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "DiamentionsMaster information saved successfully..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to save diamention",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to save diamentionsMaster information..."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 422
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/diamentions/update": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ID": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "NAME": {
                    "type": "string",
                    "nullable": true
                  },
                  "STATUS": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "SEQ_NO": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "IMAGE_URL": {
                    "type": "string",
                    "nullable": true
                  },
                  "DESCRIPTION": {
                    "type": "string",
                    "nullable": true
                  },
                  "CLIENT_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  }
                },
                "required": [
                  "ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "DiamentionsMaster information updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "DiamentionsMaster information updated successfully..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to update diamention",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to update diamentionsMaster information."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 422
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/optionTaskMapping/get": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "nullable": true
                  },
                  "pageSize": {
                    "nullable": true
                  },
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/optionTaskMapping/create": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "OPTION_ID": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "TASK_ID": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "DATE_DIFFERENCE": {
                    "type": "string",
                    "nullable": true
                  },
                  "ENABLE_TIME": {
                    "type": "string",
                    "nullable": true
                  },
                  "DISABLE_TIME": {
                    "type": "string",
                    "nullable": true
                  },
                  "TASK_PRIORITY": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "CLIENT_ID": {
                    "type": "integer",
                    "format": "int32"
                  }
                },
                "required": [
                  "OPTION_ID",
                  "TASK_ID",
                  "CLIENT_ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OptionTaskMapping information saved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "OptionTaskMapping information saved successfully..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to save mapping",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to save optionTaskMapping information..."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 422
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/optionTaskMapping/update": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ID": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "OPTION_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "TASK_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "DATE_DIFFERENCE": {
                    "type": "string",
                    "nullable": true
                  },
                  "ENABLE_TIME": {
                    "type": "string",
                    "nullable": true
                  },
                  "DISABLE_TIME": {
                    "type": "string",
                    "nullable": true
                  },
                  "TASK_PRIORITY": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "CLIENT_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  }
                },
                "required": [
                  "ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OptionTaskMapping information updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "OptionTaskMapping information updated successfully..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to update mapping",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to update optionTaskMapping information."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 422
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/questionary/get": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "nullable": true
                  },
                  "pageSize": {
                    "nullable": true
                  },
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/questionary/create": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "AGE_GROUP": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "DIAMENTION_ID": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "QUESTION_HEAD_ID": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "LABEL": {
                    "type": "string"
                  },
                  "DESCRIPTION": {
                    "type": "string",
                    "nullable": true
                  },
                  "IS_COMMON": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "IS_CHILD_AVAILABLE": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "QUESTION_TYPE": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "STATUS": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "SEQ_NO": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "CLIENT_ID": {
                    "type": "integer",
                    "format": "int32"
                  }
                },
                "required": [
                  "AGE_GROUP",
                  "DIAMENTION_ID",
                  "QUESTION_HEAD_ID",
                  "LABEL",
                  "QUESTION_TYPE",
                  "CLIENT_ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "QuestionaryMaster information saved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "QuestionaryMaster information saved successfully..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to save",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to save questionaryMaster information..."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 422
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/questionary/update": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ID": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "AGE_GROUP": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "DIAMENTION_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "QUESTION_HEAD_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "LABEL": {
                    "type": "string",
                    "nullable": true
                  },
                  "DESCRIPTION": {
                    "type": "string",
                    "nullable": true
                  },
                  "IS_COMMON": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "IS_CHILD_AVAILABLE": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "QUESTION_TYPE": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "STATUS": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "SEQ_NO": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "CLIENT_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  }
                },
                "required": [
                  "ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "QuestionaryMaster information updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "QuestionaryMaster information updated successfully..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to update",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to update questionaryMaster information."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 422
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/questionary/add": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "AGE_GROUP": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "DIAMENTION_ID": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "QUESTION_HEAD_ID": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "LABEL": {
                    "type": "string"
                  },
                  "DESCRIPTION": {
                    "type": "string",
                    "nullable": true
                  },
                  "IS_COMMON": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "IS_CHILD_AVAILABLE": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "QUESTION_TYPE": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "STATUS": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "SEQ_NO": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "CLIENT_ID": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "OPTIONS": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "LABEL": {
                          "type": "string"
                        },
                        "RANGES": {
                          "type": "string",
                          "nullable": true
                        },
                        "STATUS": {
                          "type": "boolean",
                          "nullable": true
                        },
                        "TASKS": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "TASK_ID": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "DATE_DIFFERENCE": {
                                "type": "string",
                                "nullable": true
                              },
                              "ENABLE_TIME": {
                                "type": "string",
                                "nullable": true
                              },
                              "DISABLE_TIME": {
                                "type": "string",
                                "nullable": true
                              }
                            },
                            "required": [
                              "TASK_ID"
                            ]
                          }
                        }
                      },
                      "required": [
                        "LABEL"
                      ]
                    }
                  }
                },
                "required": [
                  "AGE_GROUP",
                  "DIAMENTION_ID",
                  "QUESTION_HEAD_ID",
                  "LABEL",
                  "QUESTION_TYPE",
                  "CLIENT_ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "QuestionaryMaster information saved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "QuestionaryMaster information saved successfully..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to save",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to save questionaryMaster information..."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 422
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/questionary/getData": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "nullable": true
                  },
                  "pageSize": {
                    "nullable": true
                  },
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/questionaryOptions/get": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "nullable": true
                  },
                  "pageSize": {
                    "nullable": true
                  },
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/questionaryOptions/create": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "QUESTION_ID": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "LABEL": {
                    "type": "string"
                  },
                  "RANGES": {
                    "type": "string",
                    "nullable": true
                  },
                  "STATUS": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "CLIENT_ID": {
                    "type": "integer",
                    "format": "int32"
                  }
                },
                "required": [
                  "QUESTION_ID",
                  "LABEL",
                  "CLIENT_ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "QuestionaryOptions information saved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "QuestionaryOptions information saved successfully..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to save",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to save questionaryOptions information..."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 422
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/questionaryOptions/update": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ID": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "QUESTION_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "LABEL": {
                    "type": "string",
                    "nullable": true
                  },
                  "RANGES": {
                    "type": "string",
                    "nullable": true
                  },
                  "STATUS": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "CLIENT_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  }
                },
                "required": [
                  "ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "QuestionaryOptions information updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "QuestionaryOptions information updated successfully..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to update",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to update questionaryOptions information."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 422
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/questionaryOptions/add": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "QUESTION_ID": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "LABEL": {
                    "type": "string"
                  },
                  "RANGES": {
                    "type": "string",
                    "nullable": true
                  },
                  "STATUS": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "CLIENT_ID": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "TASKS": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "TASK_ID": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "DATE_DIFFERENCE": {
                          "type": "string",
                          "nullable": true
                        },
                        "ENABLE_TIME": {
                          "type": "string",
                          "nullable": true
                        },
                        "DISABLE_TIME": {
                          "type": "string",
                          "nullable": true
                        },
                        "TASK_PRIORITY": {
                          "type": "integer",
                          "format": "int32",
                          "nullable": true
                        }
                      },
                      "required": [
                        "TASK_ID"
                      ]
                    }
                  }
                },
                "required": [
                  "QUESTION_ID",
                  "LABEL",
                  "CLIENT_ID",
                  "TASKS"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "QuestionaryOptions information saved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "QuestionaryOptions information saved successfully..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to save",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to save questionaryOptions information..."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 422
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/task/get": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "nullable": true
                  },
                  "pageSize": {
                    "nullable": true
                  },
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/task/create": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "LABEL": {
                    "type": "string"
                  },
                  "DESCRIPTIONS": {
                    "type": "string",
                    "nullable": true
                  },
                  "IMAGE_URL": {
                    "type": "string",
                    "nullable": true
                  },
                  "STATUS": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "SEQ_NO": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "FITNESS_ACTIVITY_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "DIAMENTION_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "AGE_CATEGORY_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "CLIENT_ID": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "TYPE": {
                    "type": "string",
                    "nullable": true
                  }
                },
                "required": [
                  "LABEL",
                  "CLIENT_ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "TaskMaster information saved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "TaskMaster information saved successfully..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to save",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to save taskMaster information..."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 422
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/task/update": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ID": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "LABEL": {
                    "type": "string",
                    "nullable": true
                  },
                  "DESCRIPTIONS": {
                    "type": "string",
                    "nullable": true
                  },
                  "IMAGE_URL": {
                    "type": "string",
                    "nullable": true
                  },
                  "STATUS": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "SEQ_NO": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "FITNESS_ACTIVITY_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "DIAMENTION_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "AGE_CATEGORY_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "CLIENT_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "TYPE": {
                    "type": "string",
                    "nullable": true
                  }
                },
                "required": [
                  "ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "TaskMaster information updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "TaskMaster information updated successfully..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to update",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to update taskMaster information."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 422
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/task/getUnmapped": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "nullable": true
                  },
                  "pageSize": {
                    "nullable": true
                  },
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/userQuestionaries/get": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "nullable": true
                  },
                  "pageSize": {
                    "nullable": true
                  },
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/userQuestionaries/create": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "USER_ID": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "QUESTION_ID": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "OPTION_ID": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "ANSWER_TEXT": {
                    "type": "string",
                    "nullable": true
                  },
                  "CLIENT_ID": {
                    "type": "integer",
                    "format": "int32"
                  }
                },
                "required": [
                  "USER_ID",
                  "QUESTION_ID",
                  "OPTION_ID",
                  "CLIENT_ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "UserQuestionaries information saved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "UserQuestionaries information saved successfully..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to save",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to save userQuestionaries information..."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 422
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/userQuestionaries/update": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ID": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "USER_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "QUESTION_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "OPTION_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "ANSWER_TEXT": {
                    "type": "string",
                    "nullable": true
                  },
                  "CLIENT_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  }
                },
                "required": [
                  "ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "UserQuestionaries information updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "UserQuestionaries information updated successfully..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to update",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to update userQuestionaries information."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 422
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/userQuestionaries/add": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "QUESTION_DATA": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "USER_ID": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "QUESTION_ID": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "OPTION_ID": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "ANSWER_TEXT": {
                          "type": "string",
                          "nullable": true
                        },
                        "CLIENT_ID": {
                          "type": "integer",
                          "format": "int32"
                        }
                      },
                      "required": [
                        "USER_ID",
                        "QUESTION_ID",
                        "OPTION_ID",
                        "CLIENT_ID"
                      ]
                    }
                  }
                },
                "required": [
                  "QUESTION_DATA"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "UserQuestionaries information saved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "UserQuestionaries information saved successfully..."
                    }
                  }
                }
              }
            }
          },
          "300": {
            "description": "No data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 300
                    },
                    "message": {
                      "type": "string",
                      "example": "No data..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to save",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to save userQuestionaries information..."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/userTrackbook/get": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "nullable": true
                  },
                  "pageSize": {
                    "nullable": true
                  },
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/userTrackbook/create": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "TASK_ID": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "USER_ID": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "ASSIGNED_DATE": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "COMPLETED_DATE": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "DATE_DIFFERENCE": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "ENABLE_TIME": {
                    "type": "string",
                    "nullable": true
                  },
                  "DISABLE_TIMING": {
                    "type": "string",
                    "nullable": true
                  },
                  "STATUS": {
                    "type": "string",
                    "nullable": true
                  },
                  "SUBSCRIPTION_DETAILS_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "CLIENT_ID": {
                    "type": "integer",
                    "format": "int32"
                  }
                },
                "required": [
                  "TASK_ID",
                  "USER_ID",
                  "CLIENT_ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "UserTrackbook information saved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "UserTrackbook information saved successfully..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to save",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to save userTrackbook information..."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 422
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/userTrackbook/update": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ID": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "TASK_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "USER_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "ASSIGNED_DATE": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "COMPLETED_DATE": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "DATE_DIFFERENCE": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "ENABLE_TIME": {
                    "type": "string",
                    "nullable": true
                  },
                  "DISABLE_TIMING": {
                    "type": "string",
                    "nullable": true
                  },
                  "STATUS": {
                    "type": "string",
                    "nullable": true
                  },
                  "SUBSCRIPTION_DETAILS_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "CLIENT_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  }
                },
                "required": [
                  "ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "UserTrackbook information updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "UserTrackbook information updated successfully..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to update",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to update userTrackbook information."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 422
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/userTrackbook/add": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "TRACKBOOK_DATA": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "TASK_ID": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "USER_ID": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "ASSIGNED_DATE": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "COMPLETED_DATE": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "DATE_DIFFERENCE": {
                          "type": "integer",
                          "format": "int32",
                          "nullable": true
                        },
                        "ENABLE_TIME": {
                          "type": "string",
                          "nullable": true
                        },
                        "DISABLE_TIMING": {
                          "type": "string",
                          "nullable": true
                        },
                        "STATUS": {
                          "type": "string",
                          "nullable": true
                        },
                        "SUBSCRIPTION_DETAILS_ID": {
                          "type": "integer",
                          "format": "int32",
                          "nullable": true
                        },
                        "CLIENT_ID": {
                          "type": "integer",
                          "format": "int32"
                        }
                      },
                      "required": [
                        "TASK_ID",
                        "USER_ID",
                        "CLIENT_ID"
                      ]
                    }
                  },
                  "USER_SUBSCRIPTION_ID": {
                    "type": "integer",
                    "format": "int32"
                  }
                },
                "required": [
                  "TRACKBOOK_DATA",
                  "USER_SUBSCRIPTION_ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Trackbook information saved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Trackbook information saved successfully..."
                    }
                  }
                }
              }
            }
          },
          "300": {
            "description": "No data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 300
                    },
                    "message": {
                      "type": "string",
                      "example": "No data..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to save",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to save Trackbook information..."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/userTrackbook/updateTask": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "bulkUpdateData": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "ID": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "STATUS": {
                          "type": "string"
                        },
                        "ASSIGNED_DATE": {
                          "type": "string",
                          "format": "date"
                        },
                        "USER_ID": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "SUBSCRIPTION_DETAILS_ID": {
                          "type": "integer",
                          "format": "int32"
                        }
                      },
                      "required": [
                        "ID",
                        "STATUS",
                        "ASSIGNED_DATE",
                        "USER_ID",
                        "SUBSCRIPTION_DETAILS_ID"
                      ]
                    }
                  }
                },
                "required": [
                  "bulkUpdateData"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "UserTrackbook information updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "UserTrackbook information updated successfully..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to update",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to update userTrackbook information."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/userTrackbook/getTaskCompletionSummary": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "nullable": true
                  },
                  "pageSize": {
                    "nullable": true
                  },
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/userTrackbook/getUserTaskCompletionSummary": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "nullable": true
                  },
                  "pageSize": {
                    "nullable": true
                  },
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/userTrackbook/getSummary": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "nullable": true
                  },
                  "pageSize": {
                    "nullable": true
                  },
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/subscription/get": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "nullable": true
                  },
                  "pageSize": {
                    "nullable": true
                  },
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/subscription/create": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "LABEL": {
                    "type": "string"
                  },
                  "DESCRIPTION": {
                    "type": "string",
                    "nullable": true
                  },
                  "IS_TRACKBOOK_AVAILABLE": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "IS_QUESTION_PAPER_AVAILABLE": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "IS_ERP_AVAILBALE": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "STATUS": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "PRICE": {
                    "type": "number",
                    "format": "decimal",
                    "nullable": true
                  },
                  "DAYS": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "DISCOUNT": {
                    "type": "number",
                    "format": "decimal",
                    "nullable": true
                  },
                  "TYPE": {
                    "type": "string"
                  },
                  "DIAMENTION_ID": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "AGE_GROUP": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "CLIENT_ID": {
                    "type": "integer",
                    "format": "int32"
                  }
                },
                "required": [
                  "LABEL",
                  "DAYS",
                  "TYPE",
                  "DIAMENTION_ID",
                  "AGE_GROUP",
                  "CLIENT_ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "SubscriptionMaster information saved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "SubscriptionMaster information saved successfully..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to save",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to save subscriptionMaster information..."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 422
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/subscription/update": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ID": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "LABEL": {
                    "type": "string",
                    "nullable": true
                  },
                  "DESCRIPTION": {
                    "type": "string",
                    "nullable": true
                  },
                  "IS_TRACKBOOK_AVAILABLE": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "IS_QUESTION_PAPER_AVAILABLE": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "IS_ERP_AVAILBALE": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "STATUS": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "PRICE": {
                    "type": "number",
                    "format": "decimal",
                    "nullable": true
                  },
                  "DAYS": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "DISCOUNT": {
                    "type": "number",
                    "format": "decimal",
                    "nullable": true
                  },
                  "TYPE": {
                    "type": "string",
                    "nullable": true
                  },
                  "DIAMENTION_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "AGE_GROUP": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "CLIENT_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  }
                },
                "required": [
                  "ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "SubscriptionMaster information updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "SubscriptionMaster information updated successfully..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to update",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to update subscriptionMaster information."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 422
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/subscription/generateOrderId": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "AMOUNT": {
                    "type": "integer",
                    "format": "int32"
                  }
                },
                "required": [
                  "AMOUNT"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Order created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to generate order ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to generate order ID."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Something went wrong",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Something went wrong"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/subscription/sendSubscriptionMessage": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "MOBILE_NUMBER": {
                    "type": "string"
                  },
                  "NAME": {
                    "type": "string"
                  }
                },
                "required": [
                  "MOBILE_NUMBER",
                  "NAME"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Message sent",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to send",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to send OTP."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/userSubscription/get": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "nullable": true
                  },
                  "pageSize": {
                    "nullable": true
                  },
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/userSubscription/create": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "USER_ID": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "SUBSCRIPTION_ID": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "PURCHASE_DATE": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "EXPIRE_DATE": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "PAID_AMOUNT": {
                    "type": "number",
                    "format": "decimal",
                    "nullable": true
                  },
                  "STATUS": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "COUPON_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "TRANSACTION_ID": {
                    "type": "string",
                    "nullable": true
                  },
                  "CLIENT_ID": {
                    "type": "integer",
                    "format": "int32"
                  }
                },
                "required": [
                  "USER_ID",
                  "SUBSCRIPTION_ID",
                  "CLIENT_ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "UserSubscription information saved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "UserSubscription information saved successfully..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to save",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to save userSubscription information..."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 422
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/userSubscription/update": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ID": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "USER_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "SUBSCRIPTION_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "PURCHASE_DATE": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "EXPIRE_DATE": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "PAID_AMOUNT": {
                    "type": "number",
                    "format": "decimal",
                    "nullable": true
                  },
                  "STATUS": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "COUPON_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "TRANSACTION_ID": {
                    "type": "string",
                    "nullable": true
                  },
                  "CLIENT_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  }
                },
                "required": [
                  "ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "UserSubscription information updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "UserSubscription information updated successfully..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to update",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to update userSubscription information."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 422
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/userSubscription/add": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "subscriptionData": {
                    "type": "object",
                    "properties": {
                      "USER_SUBSCRIPTION_ID": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "START_DATE": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "END_DATE": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "IS_SUNDAY_OFF": {
                        "type": "boolean"
                      },
                      "ANIMATION_ID": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "IS_CONTINUED": {
                        "type": "boolean"
                      },
                      "ANIMATION_DETAILS_ID": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "ANIMATION_STATUS": {
                        "type": "string"
                      },
                      "CLIENT_ID": {
                        "type": "integer",
                        "format": "int32"
                      }
                    },
                    "required": [
                      "USER_SUBSCRIPTION_ID",
                      "START_DATE",
                      "END_DATE",
                      "IS_SUNDAY_OFF",
                      "ANIMATION_ID",
                      "IS_CONTINUED",
                      "ANIMATION_DETAILS_ID",
                      "ANIMATION_STATUS",
                      "CLIENT_ID"
                    ]
                  }
                },
                "required": [
                  "subscriptionData"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "UserSubscription information saved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "UserSubscription information saved successfully..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to save nested data",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "integer",
                          "example": 400
                        },
                        "message": {
                          "type": "string",
                          "example": "Failed to save usersubscriptiondetails information..."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "integer",
                          "example": 400
                        },
                        "message": {
                          "type": "string",
                          "example": "Failed to save userAnimationDetails information..."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "integer",
                          "example": 400
                        },
                        "message": {
                          "type": "string",
                          "example": "Failed to save rewards information..."
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/userSubscription/getUserSubscriptionSummary": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "nullable": true
                  },
                  "pageSize": {
                    "nullable": true
                  },
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Summary response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "count": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/userSubscription/exit": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ID": {
                    "type": "integer",
                    "format": "int32"
                  }
                },
                "required": [
                  "ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "UserSubscription information updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "UserSubscription information updated successfully..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to update",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "integer",
                          "example": 400
                        },
                        "message": {
                          "type": "string",
                          "example": "Failed to update userSubscription information."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "integer",
                          "example": 400
                        },
                        "message": {
                          "type": "string",
                          "example": "Failed to update userSubscription details."
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Something went wrong",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Somthing went wrong..."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/userSubscriptionDetails/get": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "nullable": true
                  },
                  "pageSize": {
                    "nullable": true
                  },
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/userSubscriptionDetails/create": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "USER_SUBSCRIPTION_ID": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "START_DATE": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "END_DATE": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "IS_SUNDAY_OFF": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "STATUS": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "IS_CONTINUED": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "ANIMATION_ID": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "CLIENT_ID": {
                    "type": "integer",
                    "format": "int32"
                  }
                },
                "required": [
                  "USER_SUBSCRIPTION_ID",
                  "START_DATE",
                  "END_DATE",
                  "ANIMATION_ID",
                  "CLIENT_ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "UserSubscriptionDetails information saved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "UserSubscriptionDetails information saved successfully..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to save",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to save userSubscriptionDetails information..."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 422
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/userSubscriptionDetails/update": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ID": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "USER_SUBSCRIPTION_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "START_DATE": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "END_DATE": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "IS_SUNDAY_OFF": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "STATUS": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "IS_CONTINUED": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "ANIMATION_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "CLIENT_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  }
                },
                "required": [
                  "ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "UserSubscriptionDetails information updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "UserSubscriptionDetails information updated successfully..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to update",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to update userSubscriptionDetails information."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 422
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/coupon/get": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "nullable": true
                  },
                  "pageSize": {
                    "nullable": true
                  },
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/coupon/create": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "COUPON_CODE": {
                    "type": "string"
                  },
                  "VALUE": {
                    "type": "number",
                    "format": "decimal",
                    "nullable": true
                  },
                  "EXPIRE_DATE": {
                    "type": "string",
                    "format": "date"
                  },
                  "CREATED_DATE": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "STATUS": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "CLIENT_ID": {
                    "type": "integer",
                    "format": "int32"
                  }
                },
                "required": [
                  "COUPON_CODE",
                  "EXPIRE_DATE",
                  "CLIENT_ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "CouponMaster information saved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "CouponMaster information saved successfully..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to save",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to save couponMaster information..."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 422
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/coupon/update": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ID": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "COUPON_CODE": {
                    "type": "string",
                    "nullable": true
                  },
                  "VALUE": {
                    "type": "number",
                    "format": "decimal",
                    "nullable": true
                  },
                  "EXPIRE_DATE": {
                    "type": "string",
                    "format": "date",
                    "nullable": true
                  },
                  "CREATED_DATE": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "STATUS": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "CLIENT_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  }
                },
                "required": [
                  "ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "CouponMaster information updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "CouponMaster information updated successfully..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to update",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to update couponMaster information."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 422
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/couponUsage/get": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "nullable": true
                  },
                  "pageSize": {
                    "nullable": true
                  },
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/couponUsage/create": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "USER_ID": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "COUPON_ID": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "DISCOUNT_AMOUNT": {
                    "type": "number",
                    "format": "decimal",
                    "nullable": true
                  },
                  "TOTAL_AMOUNT": {
                    "type": "number",
                    "format": "decimal",
                    "nullable": true
                  },
                  "DATETIME": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "CLIENT_ID": {
                    "type": "integer",
                    "format": "int32"
                  }
                },
                "required": [
                  "USER_ID",
                  "COUPON_ID",
                  "DATETIME",
                  "CLIENT_ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "CouponUsage information saved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "CouponUsage information saved successfully..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to save",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to save couponUsage information..."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 422
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/couponUsage/update": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ID": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "USER_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "COUPON_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "DISCOUNT_AMOUNT": {
                    "type": "number",
                    "format": "decimal",
                    "nullable": true
                  },
                  "TOTAL_AMOUNT": {
                    "type": "number",
                    "format": "decimal",
                    "nullable": true
                  },
                  "DATETIME": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "CLIENT_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  }
                },
                "required": [
                  "ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "CouponUsage information updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "CouponUsage information updated successfully..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to update",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to update couponUsage information."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/animation/get": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "nullable": true
                  },
                  "pageSize": {
                    "nullable": true
                  },
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/animation/create": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/animation/update": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ID": {
                    "nullable": true
                  }
                },
                "required": [
                  "ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/animation/getAnimationSummary": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "nullable": true
                  },
                  "pageSize": {
                    "nullable": true
                  },
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/animation/getUserAnimationCompletion": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "nullable": true
                  },
                  "pageSize": {
                    "nullable": true
                  },
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/animationDetails/get": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "nullable": true
                  },
                  "pageSize": {
                    "nullable": true
                  },
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/animationDetails/create": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/animationDetails/update": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ID": {
                    "nullable": true
                  }
                },
                "required": [
                  "ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/animationRewards/get": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "nullable": true
                  },
                  "pageSize": {
                    "nullable": true
                  },
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/animationRewards/create": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/animationRewards/update": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ID": {
                    "nullable": true
                  }
                },
                "required": [
                  "ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/userAnimationDetails/get": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "nullable": true
                  },
                  "pageSize": {
                    "nullable": true
                  },
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/userAnimationDetails/create": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/userAnimationDetails/update": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ID": {
                    "nullable": true
                  }
                },
                "required": [
                  "ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/userAnimationDetails/addRewards": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "USER_ID": {
                    "nullable": true
                  },
                  "PREVIOUS_SEQ": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/userRewards/get": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "nullable": true
                  },
                  "pageSize": {
                    "nullable": true
                  },
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/userRewards/create": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/userRewards/update": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ID": {
                    "nullable": true
                  }
                },
                "required": [
                  "ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/attendanceReport/getSubjectwiseCount": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/attendanceReport/getClasswiseCount": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/attendanceReport/dateWisePresentCount": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "nullable": true
                  },
                  "pageSize": {
                    "nullable": true
                  },
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/dashBoard/getAllCount": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  },
                  "SCHOOL_ID": {
                    "nullable": true
                  },
                  "YEAR_ID": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/dashBoard/classWiseFeeCount": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  },
                  "SCHOOL_ID": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/dashBoard/taskStatus": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "nullable": true
                  },
                  "pageSize": {
                    "nullable": true
                  },
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/schoolReports/studentWiseTaskDetails": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "nullable": true
                  },
                  "pageSize": {
                    "nullable": true
                  },
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/schoolReports/schoolWiseTaskCount": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "nullable": true
                  },
                  "pageSize": {
                    "nullable": true
                  },
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/schoolReports/schoolWiseMemberCount": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "nullable": true
                  },
                  "pageSize": {
                    "nullable": true
                  },
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/activityCategory/get": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "nullable": true
                  },
                  "pageSize": {
                    "nullable": true
                  },
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/activityCategory/create": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "CATEGORY_NAME": {
                    "type": "string"
                  },
                  "CATEGORY_IMAGE": {
                    "type": "string"
                  },
                  "SEQ_NO": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "STATUS": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "CLIENT_ID": {
                    "type": "integer",
                    "format": "int32"
                  }
                },
                "required": [
                  "CATEGORY_NAME",
                  "CATEGORY_IMAGE",
                  "SEQ_NO",
                  "CLIENT_ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ActivityCategory information saved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "ActivityCategory information saved successfully..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to save category",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to save activityCategory information..."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 422
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/activityCategory/update": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ID": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "CATEGORY_NAME": {
                    "type": "string",
                    "nullable": true
                  },
                  "CATEGORY_IMAGE": {
                    "type": "string",
                    "nullable": true
                  },
                  "SEQ_NO": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "STATUS": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "CLIENT_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  }
                },
                "required": [
                  "ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ActivityCategory information updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "ActivityCategory information updated successfully..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to update category",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to update activityCategory information."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 422
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/activitySubCategory/get": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "nullable": true
                  },
                  "pageSize": {
                    "nullable": true
                  },
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/activitySubCategory/create": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "CATEGORY_ID": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "SUB_CATEGORY_NAME": {
                    "type": "string"
                  },
                  "SEQ_NO": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "STATUS": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "CLIENT_ID": {
                    "type": "integer",
                    "format": "int32"
                  }
                },
                "required": [
                  "CATEGORY_ID",
                  "SUB_CATEGORY_NAME",
                  "SEQ_NO",
                  "CLIENT_ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ActivitySubCategory information saved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "ActivitySubCategory information saved successfully..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to save subcategory",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to save activitySubCategory information..."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 422
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/activitySubCategory/update": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ID": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "CATEGORY_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "SUB_CATEGORY_NAME": {
                    "type": "string",
                    "nullable": true
                  },
                  "SEQ_NO": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "STATUS": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "CLIENT_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  }
                },
                "required": [
                  "ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ActivitySubCategory information updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "ActivitySubCategory information updated successfully..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to update subcategory",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to update activitySubCategory information."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 422
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/userAppLogs/get": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "nullable": true
                  },
                  "pageSize": {
                    "nullable": true
                  },
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/userAppLogs/create": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "USER_ID": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "ADDED_DATETIME": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "FILE_NAME": {
                    "type": "string"
                  },
                  "CLIENT_ID": {
                    "type": "integer",
                    "format": "int32"
                  }
                },
                "required": [
                  "USER_ID",
                  "FILE_NAME",
                  "CLIENT_ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "userAppLogs information saved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "userAppLogs information saved successfully..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to save userAppLogs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to save userAppLogs information..."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 422
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/userAppLogs/update": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ID": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "USER_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "ADDED_DATETIME": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "FILE_NAME": {
                    "type": "string",
                    "nullable": true
                  },
                  "CLIENT_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  }
                },
                "required": [
                  "ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "userAppLogs information updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "userAppLogs information updated successfully..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to update userAppLogs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to update userAppLogs information."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 422
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/periodTracking/get": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "nullable": true
                  },
                  "pageSize": {
                    "nullable": true
                  },
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/periodTracking/create": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "USER_ID": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "MONTH": {
                    "type": "string",
                    "nullable": true
                  },
                  "PERIOD_DAYS_LENGTH": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "CYCLE_LENGTH": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "LAST_PERIOD_DATE": {
                    "type": "string",
                    "format": "date",
                    "nullable": true
                  },
                  "IS_REGULAR_STATUS": {
                    "type": "string",
                    "nullable": true
                  },
                  "REMIND_DATE_TIME": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "DAY_REMINDER_DATE": {
                    "type": "string",
                    "format": "date",
                    "nullable": true
                  },
                  "IS_REMIND": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "IS_DONE": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "YEAR": {
                    "type": "string",
                    "nullable": true
                  },
                  "PERIOD_START_DATE": {
                    "type": "string",
                    "format": "date",
                    "nullable": true
                  },
                  "PERIOD_END_DATE": {
                    "type": "string",
                    "format": "date",
                    "nullable": true
                  },
                  "FERTILE_START_DATE": {
                    "type": "string",
                    "format": "date",
                    "nullable": true
                  },
                  "FERTILE_END_DATE": {
                    "type": "string",
                    "format": "date",
                    "nullable": true
                  },
                  "OVULATION_START_DATE": {
                    "type": "string",
                    "format": "date",
                    "nullable": true
                  },
                  "OVULATION_END_DATE": {
                    "type": "string",
                    "format": "date",
                    "nullable": true
                  },
                  "SAFE_START_DATE": {
                    "type": "string",
                    "format": "date",
                    "nullable": true
                  },
                  "SAFE_END_DATE": {
                    "type": "string",
                    "format": "date",
                    "nullable": true
                  },
                  "IS_QUESTIONARY_COMPLETE": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "REMIND_DATE_COUNT": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "DAY_REMINDER_END_DATE": {
                    "type": "string",
                    "format": "date",
                    "nullable": true
                  },
                  "CLIENT_ID": {
                    "type": "integer",
                    "format": "int32"
                  }
                },
                "required": [
                  "USER_ID",
                  "CLIENT_ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "periodTracking information saved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "periodTracking information saved successfully..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to save periodTracking",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to save periodTracking information..."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 422
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/periodTracking/update": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ID": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "USER_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "MONTH": {
                    "type": "string",
                    "nullable": true
                  },
                  "PERIOD_DAYS_LENGTH": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "CYCLE_LENGTH": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "LAST_PERIOD_DATE": {
                    "type": "string",
                    "format": "date",
                    "nullable": true
                  },
                  "IS_REGULAR_STATUS": {
                    "type": "string",
                    "nullable": true
                  },
                  "REMIND_DATE_TIME": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "DAY_REMINDER_DATE": {
                    "type": "string",
                    "format": "date",
                    "nullable": true
                  },
                  "IS_REMIND": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "IS_DONE": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "YEAR": {
                    "type": "string",
                    "nullable": true
                  },
                  "PERIOD_START_DATE": {
                    "type": "string",
                    "format": "date",
                    "nullable": true
                  },
                  "PERIOD_END_DATE": {
                    "type": "string",
                    "format": "date",
                    "nullable": true
                  },
                  "FERTILE_START_DATE": {
                    "type": "string",
                    "format": "date",
                    "nullable": true
                  },
                  "FERTILE_END_DATE": {
                    "type": "string",
                    "format": "date",
                    "nullable": true
                  },
                  "OVULATION_START_DATE": {
                    "type": "string",
                    "format": "date",
                    "nullable": true
                  },
                  "OVULATION_END_DATE": {
                    "type": "string",
                    "format": "date",
                    "nullable": true
                  },
                  "SAFE_START_DATE": {
                    "type": "string",
                    "format": "date",
                    "nullable": true
                  },
                  "SAFE_END_DATE": {
                    "type": "string",
                    "format": "date",
                    "nullable": true
                  },
                  "IS_QUESTIONARY_COMPLETE": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "REMIND_DATE_COUNT": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "DAY_REMINDER_END_DATE": {
                    "type": "string",
                    "format": "date",
                    "nullable": true
                  },
                  "CLIENT_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  }
                },
                "required": [
                  "ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "periodTracking information updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "periodTracking information updated successfully..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to update periodTracking",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to update periodTracking information."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 422
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/userBmi/get": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "nullable": true
                  },
                  "pageSize": {
                    "nullable": true
                  },
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/userBmi/create": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "USER_ID": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "WEIGHT": {
                    "type": "number",
                    "nullable": true
                  },
                  "WEIGHT_UNIT": {
                    "type": "string",
                    "nullable": true
                  },
                  "HEIGHT": {
                    "type": "number",
                    "nullable": true
                  },
                  "HEIGHT_UNIT": {
                    "type": "string",
                    "nullable": true
                  },
                  "BMI": {
                    "type": "number",
                    "nullable": true
                  },
                  "CREATED_DATETIME": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "CLIENT_ID": {
                    "type": "integer",
                    "format": "int32"
                  }
                },
                "required": [
                  "USER_ID",
                  "CLIENT_ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "userBmi information saved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "userBmi information saved successfully..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to save userBmi",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to save userBmi information..."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 422
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/userBmi/update": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ID": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "USER_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "WEIGHT": {
                    "type": "number",
                    "nullable": true
                  },
                  "WEIGHT_UNIT": {
                    "type": "string",
                    "nullable": true
                  },
                  "HEIGHT": {
                    "type": "number",
                    "nullable": true
                  },
                  "HEIGHT_UNIT": {
                    "type": "string",
                    "nullable": true
                  },
                  "BMI": {
                    "type": "number",
                    "nullable": true
                  },
                  "CREATED_DATETIME": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "CLIENT_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  }
                },
                "required": [
                  "ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "userBmi information updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "userBmi information updated successfully..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to update userBmi",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to update userBmi information."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 422
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/whatsAppMessageHistory/get": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "nullable": true
                  },
                  "pageSize": {
                    "nullable": true
                  },
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/whatsAppMessageHistory/create": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "USER_ID": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "MSG_TYPE": {
                    "type": "string",
                    "nullable": true
                  },
                  "SENT_TO": {
                    "type": "string"
                  },
                  "MESSAGE_CONTAIN": {
                    "type": "string",
                    "nullable": true
                  },
                  "PARAMS": {
                    "type": "string",
                    "nullable": true
                  },
                  "MEDIA_LINK": {
                    "type": "string",
                    "nullable": true
                  },
                  "STATUS": {
                    "type": "string",
                    "nullable": true
                  },
                  "RESPONSE_DATA": {
                    "type": "string",
                    "nullable": true
                  },
                  "TEMPLATE_NAME": {
                    "type": "string",
                    "nullable": true
                  },
                  "CLIENT_ID": {
                    "type": "integer",
                    "format": "int32"
                  }
                },
                "required": [
                  "USER_ID",
                  "SENT_TO",
                  "CLIENT_ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "whatsAppMessageHistory information saved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "whatsAppMessageHistory information saved successfully..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to save whatsAppMessageHistory",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to save whatsAppMessageHistory information..."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 422
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/whatsAppMessageHistory/update": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ID": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "USER_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "MSG_TYPE": {
                    "type": "string",
                    "nullable": true
                  },
                  "SENT_TO": {
                    "type": "string",
                    "nullable": true
                  },
                  "MESSAGE_CONTAIN": {
                    "type": "string",
                    "nullable": true
                  },
                  "PARAMS": {
                    "type": "string",
                    "nullable": true
                  },
                  "MEDIA_LINK": {
                    "type": "string",
                    "nullable": true
                  },
                  "STATUS": {
                    "type": "string",
                    "nullable": true
                  },
                  "RESPONSE_DATA": {
                    "type": "string",
                    "nullable": true
                  },
                  "TEMPLATE_NAME": {
                    "type": "string",
                    "nullable": true
                  },
                  "CLIENT_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  }
                },
                "required": [
                  "ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "whatsAppMessageHistory information updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "whatsAppMessageHistory information updated successfully..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to update whatsAppMessageHistory",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to update whatsAppMessageHistory information."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 422
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/emailMessageHistory/get": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "nullable": true
                  },
                  "pageSize": {
                    "nullable": true
                  },
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/emailMessageHistory/create": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "USER_ID": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "SENT_TO": {
                    "type": "string"
                  },
                  "MESSAGE_CONTAIN": {
                    "type": "string"
                  },
                  "STATUS": {
                    "type": "string",
                    "nullable": true
                  },
                  "RESPONSE_DATA": {
                    "type": "string",
                    "nullable": true
                  },
                  "SEND_DATETIME": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "CLIENT_ID": {
                    "type": "integer",
                    "format": "int32"
                  }
                },
                "required": [
                  "USER_ID",
                  "SENT_TO",
                  "MESSAGE_CONTAIN",
                  "CLIENT_ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "emailMessageHistory information saved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "emailMessageHistory information saved successfully..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to save emailMessageHistory",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to save emailMessageHistory information..."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 422
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/emailMessageHistory/update": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ID": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "USER_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "SENT_TO": {
                    "type": "string",
                    "nullable": true
                  },
                  "MESSAGE_CONTAIN": {
                    "type": "string",
                    "nullable": true
                  },
                  "STATUS": {
                    "type": "string",
                    "nullable": true
                  },
                  "RESPONSE_DATA": {
                    "type": "string",
                    "nullable": true
                  },
                  "SEND_DATETIME": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "CLIENT_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  }
                },
                "required": [
                  "ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "emailMessageHistory information updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "emailMessageHistory information updated successfully..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to update emailMessageHistory",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to update emailMessageHistory information."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 422
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/contactUs/get": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pageIndex": {
                    "nullable": true
                  },
                  "pageSize": {
                    "nullable": true
                  },
                  "sortKey": {
                    "nullable": true
                  },
                  "sortValue": {
                    "nullable": true
                  },
                  "filter": {
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/contactUs/create": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "NAME": {
                    "type": "string"
                  },
                  "MOBILE_NO": {
                    "type": "string"
                  },
                  "EMAIL_ID": {
                    "type": "string"
                  },
                  "DATE_TIME": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "MESSAGE": {
                    "type": "string",
                    "nullable": true
                  },
                  "IS_REPLIED": {
                    "type": "string",
                    "nullable": true
                  },
                  "CLIENT_ID": {
                    "type": "integer",
                    "format": "int32"
                  }
                },
                "required": [
                  "NAME",
                  "MOBILE_NO",
                  "EMAIL_ID",
                  "CLIENT_ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ContactUs information saved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "ContactUs information saved successfully..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to save contactUs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to save contactUs information..."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 422
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/contactUs/update": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "supportkey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ID": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "NAME": {
                    "type": "string",
                    "nullable": true
                  },
                  "MOBILE_NO": {
                    "type": "string",
                    "nullable": true
                  },
                  "EMAIL_ID": {
                    "type": "string",
                    "nullable": true
                  },
                  "DATE_TIME": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "MESSAGE": {
                    "type": "string",
                    "nullable": true
                  },
                  "IS_REPLIED": {
                    "type": "string",
                    "nullable": true
                  },
                  "CLIENT_ID": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  }
                },
                "required": [
                  "ID"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ContactUs information updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "ContactUs information updated successfully..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to update contactUs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to update contactUs information."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 422
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}